#!/bin/bash

server() {
        local _key="$SRVKEY/$DOMAIN.key"
        local _csr="$SRVCSR/$DOMAIN.csr"
        local _crt="$SRVCRT/$DOMAIN.crt"

        # Clean configuration
        clean-confs

        if [ ! -e "$CACRT/intca.crt" ] && [ ! -e "$CACRT/intca.key" ]; then
                fatal "You must first create a certificate for the root authority and the intermediate autority."
        fi

        sed -i "s/C = .*/C =/g" "$CFG/server.cnf"
        sed -i "s/ST = .*/ST =/g" "$CFG/server.cnf"
        sed -i "s/L = .*/L =/g" "$CFG/server.cnf"
        sed -i "s/O = .*/O =/g" "$CFG/server.cnf"
        sed -i "s/OU = .*/OU =/g" "$CFG/server.cnf"
        sed -i "s/CN = .*/CN =/g" "$CFG/server.cnf"
        sed -i "s/DNS.1 = .*/DNS.1 =/g" "$CFG/server.cnf"
        sed -i "s/C =/C = $COUNTRY/g" "$CFG/server.cnf"
        sed -i "s/ST =/ST = $PROVINCE/g" "$CFG/server.cnf"
        sed -i "s/L =/L = $LOCALITY/g" "$CFG/server.cnf"
        sed -i "s/O =/O = $ORGANIZATION/g" "$CFG/server.cnf"
        sed -i "s/OU =/OU = $UNIT/g" "$CFG/server.cnf"
        sed -i "s/CN =/CN = $DOMAIN/g" "$CFG/server.cnf"
        sed -i "s/DNS.1 =/DNS.1 = $DOMAIN/g" "$CFG/server.cnf"

        #Create a private key for the server cert
        if openssl genrsa -out "$_key" 4096; then
                success "Private key generated"
        else
                fatal "Fail to generate private key"
        fi

        #Create a CSR with the intermediate autority certificate
        openssl req -new -key "$_key" -out "$_csr" -config "$CFG/server.cnf"
        if openssl genrsa -out "$_key" 4096; then
                success "Private key generated"
        else
                fatal "Fail to generate private key"
        fi

        #Sign the CSR with the intermediate autority certificate
        openssl x509 -req -in "$_csr" -CA "$CACRT/intca.crt" -CAkey "$CAKEY/intca.key" -CAcreateserial -out "$SRVCRT/$DOMAIN.crt" -days "$DAYS" -sha512 -extfile "$CFG/server.cnf"
        if openssl genrsa -out "$_key" 4096; then
                success "Private key generated"
        else
                fatal "Fail to generate private key"
        fi
}
