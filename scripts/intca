#!/bin/bash

intermediate() {
        local _key="$CAKEY/intca.key"
        local _csr="$CACSR/intca.csr"
        local _crt="$CACRT/intca.crt"

        if [ ! -e "$CACRT/rootca.crt" ] && [ ! -e "$CACRT/rootca.key" ]; then
                echo -e "$RED" "You must first create a certificate for the root authority."
                exit 1
        fi

        sed -i "s/C = .*/C =/g" "$CFG/ca.cnf"
        sed -i "s/ST = .*/ST =/g" "$CFG/ca.cnf"
        sed -i "s/L = .*/L =/g" "$CFG/ca.cnf"
        sed -i "s/O = .*/O =/g" "$CFG/ca.cnf"
        sed -i "s/OU = .*/OU =/g" "$CFG/ca.cnf"
        sed -i "s/CN = .*/CN =/g" "$CFG/ca.cnf"
        sed -i "s/C =/C = $COUNTRY/g" "$CFG/ca.cnf"
        sed -i "s/ST =/ST = $PROVINCE/g" "$CFG/ca.cnf"
        sed -i "s/L =/L = $LOCALITY/g" "$CFG/ca.cnf"
        sed -i "s/O =/O = $ORGANIZATION/g" "$CFG/ca.cnf"
        sed -i "s/OU =/OU = $UNIT/g" "$CFG/ca.cnf"
        sed -i "s/CN =/CN = $DOMAIN/g" "$CFG/ca.cnf"

        #Generate the private key
        if openssl genrsa -out "$_key" 4096; then
                success "Private key generated"
        else
                fatal "Fail to generate private key"
        fi

        #Generate the CSR
        if openssl req -sha512 -new -subj "/C=$COUNTRY/ST=$PROVINCE/O=$ORGANIZATION/OU=$UNIT/L=$LOCALITY/CN=$DOMAIN" -key "$_key" -out "$_csr"; then
                success "CSR generated"
        else
                fatal "Fail to generate the CSR"
        fi

        #Generate the intermediate certificate
        if openssl ca -batch -config "$CFG/ca.cnf" -days "$DAYS" -extensions v3_ca -subj "/C=$COUNTRY/ST=$PROVINCE/O=$ORGANIZATION/OU=$UNIT/L=$LOCALITY/CN=$DOMAIN" -notext -in "$_csr" -out "$_crt"; then
                success "Intermediate certificate generated"
        else
                fatal "Fail to generate the ntermediate certificate"
        fi

        #Deletion of all *.pem generated by OpenSSL to keep only the .crt
        rm -f "$CACRT/"*.pem
}
